{"ast":null,"code":"var _jsxFileName = \"/workspaces/dsci554-hw/project-datavizolympians/src/components/cmchart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Chart, registerables } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst CrowdManagementDashboard = () => {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstanceRef = useRef(null);\n  const [visualizationType, setVisualizationType] = useState(\"line\"); // Default chart type\n  const [timeIndex, setTimeIndex] = useState(0); // Index for time slider\n  const timeSteps = [\"8:00 AM\", \"10:00 AM\", \"12:00 PM\", \"2:00 PM\", \"4:00 PM\", \"6:00 PM\", \"8:00 PM\"]; // Time intervals\n\n  // Simulated variable data over time\n  const getRealTimeData = () => {\n    const baseData = [[5000, 10000, 15000, 20000, 25000, 30000, 40000],\n    // Main Stadium\n    [2000, 4000, 6000, 8000, 10000, 15000, 20000],\n    // Swimming Arena\n    [1500, 3000, 4500, 6000, 7500, 10000, 12000] // Basketball Court\n    ];\n    const noise = () => Math.random() * 500 - 250; // Random fluctuation for variability\n\n    return baseData.map(dataset => dataset.map((value, index) => value + noise() * index * (timeIndex + 1)));\n  };\n\n  // Generate chart data based on visualization type and real-time data\n  const getChartData = () => {\n    const realTimeData = getRealTimeData();\n    switch (visualizationType) {\n      case \"line\":\n        return {\n          labels: timeSteps.slice(0, timeIndex + 1),\n          datasets: [{\n            label: \"Main Stadium\",\n            data: realTimeData[0].slice(0, timeIndex + 1),\n            borderColor: \"#FF6384\",\n            borderWidth: 2,\n            fill: false\n          }, {\n            label: \"Swimming Arena\",\n            data: realTimeData[1].slice(0, timeIndex + 1),\n            borderColor: \"#36A2EB\",\n            borderWidth: 2,\n            fill: false\n          }, {\n            label: \"Basketball Court\",\n            data: realTimeData[2].slice(0, timeIndex + 1),\n            borderColor: \"#FFCE56\",\n            borderWidth: 2,\n            fill: false\n          }]\n        };\n      case \"pie\":\n        return {\n          labels: [\"Main Stadium\", \"Swimming Arena\", \"Basketball Court\"],\n          datasets: [{\n            data: [realTimeData[0][timeIndex], realTimeData[1][timeIndex], realTimeData[2][timeIndex]],\n            backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n          }]\n        };\n      case \"bar\":\n        return {\n          labels: [\"Main Stadium\", \"Swimming Arena\", \"Basketball Court\"],\n          datasets: [{\n            label: \"Foot Traffic\",\n            data: [realTimeData[0][timeIndex], realTimeData[1][timeIndex], realTimeData[2][timeIndex]],\n            backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n          }]\n        };\n      case \"area\":\n        return {\n          labels: timeSteps.slice(0, timeIndex + 1),\n          datasets: [{\n            label: \"Main Stadium\",\n            data: realTimeData[0].slice(0, timeIndex + 1),\n            backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n          }, {\n            label: \"Swimming Arena\",\n            data: realTimeData[1].slice(0, timeIndex + 1),\n            backgroundColor: \"rgba(54, 162, 235, 0.5)\"\n          }, {\n            label: \"Basketball Court\",\n            data: realTimeData[2].slice(0, timeIndex + 1),\n            backgroundColor: \"rgba(255, 206, 86, 0.5)\"\n          }]\n        };\n      default:\n        return {};\n    }\n  };\n\n  // Initialize or update the chart\n  useEffect(() => {\n    const ctx = chartRef.current.getContext(\"2d\");\n    if (chartInstanceRef.current) {\n      // Update chart data\n      chartInstanceRef.current.data = getChartData();\n      chartInstanceRef.current.config.type = visualizationType === \"area\" ? \"line\" : visualizationType;\n      chartInstanceRef.current.update();\n    } else {\n      // Create chart instance\n      chartInstanceRef.current = new Chart(ctx, {\n        type: visualizationType === \"area\" ? \"line\" : visualizationType,\n        data: getChartData(),\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              display: true,\n              labels: {\n                color: \"white\"\n              }\n            }\n          },\n          scales: {\n            x: {\n              ticks: {\n                color: \"white\"\n              },\n              grid: {\n                color: \"rgba(255, 255, 255, 0.1)\"\n              }\n            },\n            y: {\n              ticks: {\n                color: \"white\"\n              },\n              grid: {\n                color: \"rgba(255, 255, 255, 0.1)\"\n              }\n            }\n          }\n        }\n      });\n    }\n    return () => {\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n        chartInstanceRef.current = null;\n      }\n    };\n  }, [visualizationType, timeIndex]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: \"#1a1a1a\",\n      padding: \"20px\",\n      borderRadius: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: \"white\",\n        textAlign: \"center\"\n      },\n      children: \"Crowd Management Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        marginBottom: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          color: \"white\"\n        },\n        children: [\"Select Visualization:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: visualizationType,\n          onChange: e => setVisualizationType(e.target.value),\n          style: {\n            marginLeft: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"line\",\n            children: \"Attendee Distribution (Line Chart)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"pie\",\n            children: \"Gate Usage (Pie Chart)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"bar\",\n            children: \"Venue Popularity (Bar Chart)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"area\",\n            children: \"Venue Occupancy (Stacked Area Chart)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"300px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\",\n        textAlign: \"center\",\n        color: \"white\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"time-slider\",\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: \"Adjust Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"time-slider\",\n        type: \"range\",\n        min: \"0\",\n        max: timeSteps.length - 1,\n        value: timeIndex,\n        onChange: e => setTimeIndex(Number(e.target.value)),\n        style: {\n          width: \"100%\",\n          marginTop: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"white\"\n        },\n        children: [\"Time: \", timeSteps[timeIndex]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(CrowdManagementDashboard, \"huOyvW7n5qD773ImsjZEJQWA7RE=\");\n_c = CrowdManagementDashboard;\nexport default CrowdManagementDashboard;\nvar _c;\n$RefreshReg$(_c, \"CrowdManagementDashboard\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","registerables","jsxDEV","_jsxDEV","register","CrowdManagementDashboard","_s","chartRef","chartInstanceRef","visualizationType","setVisualizationType","timeIndex","setTimeIndex","timeSteps","getRealTimeData","baseData","noise","Math","random","map","dataset","value","index","getChartData","realTimeData","labels","slice","datasets","label","data","borderColor","borderWidth","fill","backgroundColor","ctx","current","getContext","config","type","update","options","responsive","maintainAspectRatio","plugins","legend","display","color","scales","x","ticks","grid","y","destroy","style","background","padding","borderRadius","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","justifyContent","marginBottom","onChange","e","target","marginLeft","height","ref","marginTop","htmlFor","id","min","max","length","Number","width","_c","$RefreshReg$"],"sources":["/workspaces/dsci554-hw/project-datavizolympians/src/components/cmchart.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Chart, registerables } from \"chart.js\";\n\nChart.register(...registerables);\n\nconst CrowdManagementDashboard = () => {\n  const chartRef = useRef(null);\n  const chartInstanceRef = useRef(null);\n\n  const [visualizationType, setVisualizationType] = useState(\"line\"); // Default chart type\n  const [timeIndex, setTimeIndex] = useState(0); // Index for time slider\n  const timeSteps = [\n    \"8:00 AM\",\n    \"10:00 AM\",\n    \"12:00 PM\",\n    \"2:00 PM\",\n    \"4:00 PM\",\n    \"6:00 PM\",\n    \"8:00 PM\",\n  ]; // Time intervals\n\n  // Simulated variable data over time\n  const getRealTimeData = () => {\n    const baseData = [\n      [5000, 10000, 15000, 20000, 25000, 30000, 40000], // Main Stadium\n      [2000, 4000, 6000, 8000, 10000, 15000, 20000], // Swimming Arena\n      [1500, 3000, 4500, 6000, 7500, 10000, 12000], // Basketball Court\n    ];\n\n    const noise = () => Math.random() * 500 - 250; // Random fluctuation for variability\n\n    return baseData.map((dataset) =>\n      dataset.map((value, index) => value + noise() * index * (timeIndex + 1))\n    );\n  };\n\n  // Generate chart data based on visualization type and real-time data\n  const getChartData = () => {\n    const realTimeData = getRealTimeData();\n\n    switch (visualizationType) {\n      case \"line\":\n        return {\n          labels: timeSteps.slice(0, timeIndex + 1),\n          datasets: [\n            {\n              label: \"Main Stadium\",\n              data: realTimeData[0].slice(0, timeIndex + 1),\n              borderColor: \"#FF6384\",\n              borderWidth: 2,\n              fill: false,\n            },\n            {\n              label: \"Swimming Arena\",\n              data: realTimeData[1].slice(0, timeIndex + 1),\n              borderColor: \"#36A2EB\",\n              borderWidth: 2,\n              fill: false,\n            },\n            {\n              label: \"Basketball Court\",\n              data: realTimeData[2].slice(0, timeIndex + 1),\n              borderColor: \"#FFCE56\",\n              borderWidth: 2,\n              fill: false,\n            },\n          ],\n        };\n      case \"pie\":\n        return {\n          labels: [\"Main Stadium\", \"Swimming Arena\", \"Basketball Court\"],\n          datasets: [\n            {\n              data: [\n                realTimeData[0][timeIndex],\n                realTimeData[1][timeIndex],\n                realTimeData[2][timeIndex],\n              ],\n              backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n            },\n          ],\n        };\n      case \"bar\":\n        return {\n          labels: [\"Main Stadium\", \"Swimming Arena\", \"Basketball Court\"],\n          datasets: [\n            {\n              label: \"Foot Traffic\",\n              data: [\n                realTimeData[0][timeIndex],\n                realTimeData[1][timeIndex],\n                realTimeData[2][timeIndex],\n              ],\n              backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n            },\n          ],\n        };\n      case \"area\":\n        return {\n          labels: timeSteps.slice(0, timeIndex + 1),\n          datasets: [\n            {\n              label: \"Main Stadium\",\n              data: realTimeData[0].slice(0, timeIndex + 1),\n              backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n            },\n            {\n              label: \"Swimming Arena\",\n              data: realTimeData[1].slice(0, timeIndex + 1),\n              backgroundColor: \"rgba(54, 162, 235, 0.5)\",\n            },\n            {\n              label: \"Basketball Court\",\n              data: realTimeData[2].slice(0, timeIndex + 1),\n              backgroundColor: \"rgba(255, 206, 86, 0.5)\",\n            },\n          ],\n        };\n      default:\n        return {};\n    }\n  };\n\n  // Initialize or update the chart\n  useEffect(() => {\n    const ctx = chartRef.current.getContext(\"2d\");\n\n    if (chartInstanceRef.current) {\n      // Update chart data\n      chartInstanceRef.current.data = getChartData();\n      chartInstanceRef.current.config.type =\n        visualizationType === \"area\" ? \"line\" : visualizationType;\n      chartInstanceRef.current.update();\n    } else {\n      // Create chart instance\n      chartInstanceRef.current = new Chart(ctx, {\n        type: visualizationType === \"area\" ? \"line\" : visualizationType,\n        data: getChartData(),\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              display: true,\n              labels: {\n                color: \"white\",\n              },\n            },\n          },\n          scales: {\n            x: {\n              ticks: { color: \"white\" },\n              grid: { color: \"rgba(255, 255, 255, 0.1)\" },\n            },\n            y: {\n              ticks: { color: \"white\" },\n              grid: { color: \"rgba(255, 255, 255, 0.1)\" },\n            },\n          },\n        },\n      });\n    }\n\n    return () => {\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n        chartInstanceRef.current = null;\n      }\n    };\n  }, [visualizationType, timeIndex]);\n\n  return (\n    <div style={{ background: \"#1a1a1a\", padding: \"20px\", borderRadius: \"10px\" }}>\n      <h3 style={{ color: \"white\", textAlign: \"center\" }}>\n        Crowd Management Dashboard\n      </h3>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\", marginBottom: \"10px\" }}>\n        <label style={{ color: \"white\" }}>\n          Select Visualization:\n          <select\n            value={visualizationType}\n            onChange={(e) => setVisualizationType(e.target.value)}\n            style={{ marginLeft: \"10px\" }}\n          >\n            <option value=\"line\">Attendee Distribution (Line Chart)</option>\n            <option value=\"pie\">Gate Usage (Pie Chart)</option>\n            <option value=\"bar\">Venue Popularity (Bar Chart)</option>\n            <option value=\"area\">Venue Occupancy (Stacked Area Chart)</option>\n          </select>\n        </label>\n      </div>\n      <div style={{ height: \"300px\" }}>\n        <canvas ref={chartRef} />\n      </div>\n      <div style={{ marginTop: \"20px\", textAlign: \"center\", color: \"white\" }}>\n        <label htmlFor=\"time-slider\" style={{ marginBottom: \"10px\" }}>\n          Adjust Time:\n        </label>\n        <input\n          id=\"time-slider\"\n          type=\"range\"\n          min=\"0\"\n          max={timeSteps.length - 1}\n          value={timeIndex}\n          onChange={(e) => setTimeIndex(Number(e.target.value))}\n          style={{ width: \"100%\", marginTop: \"10px\" }}\n        />\n        <p style={{ color: \"white\" }}>Time: {timeSteps[timeIndex]}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default CrowdManagementDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}