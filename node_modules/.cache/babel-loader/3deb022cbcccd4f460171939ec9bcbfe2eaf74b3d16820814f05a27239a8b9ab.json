{"ast":null,"code":"var _jsxFileName = \"/workspaces/dsci554-hw/project-datavizolympians/src/components/2.js\",\n  _s = $RefreshSig$();\n// // // // import React, { useState, useEffect } from \"react\";\n\n// // // // const AthleteSection = () => {\n// // // //   const [htmlContent, setHtmlContent] = useState(\"\");\n\n// // // //   useEffect(() => {\n// // // //     // Fetch the content of test2.html\n// // // //     fetch(\"/test2.html\")\n// // // //       .then((response) => {\n// // // //         if (!response.ok) {\n// // // //           throw new Error(`Failed to load HTML file: ${response.statusText}`);\n// // // //         }\n// // // //         return response.text();\n// // // //       })\n// // // //       .then((data) => {\n// // // //         setHtmlContent(data); // Set the fetched HTML content\n// // // //       })\n// // // //       .catch((error) => console.error(\"Error fetching HTML file:\", error));\n// // // //   }, []);\n\n// // // //   return (\n// // // //     <section className=\"athlete-section\" style={{ background: \"#f4f4f9\" }}>\n// // // //       <h3 style={{ textAlign: \"center\", color: \"#4CAF50\" }}>Athlete Highlights</h3>\n// // // //       <div\n// // // //         style={{\n// // // //           position: \"relative\",\n// // // //           maxWidth: \"1200px\",\n// // // //           margin: \"auto\",\n// // // //           overflow: \"hidden\",\n// // // //           padding: \"20px\",\n// // // //           borderRadius: \"8px\",\n// // // //           boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\n// // // //           backgroundColor: \"#ffffff\",\n// // // //         }}\n// // // //       >\n// // // //         {/* Render the HTML content */}\n// // // //         <div\n// // // //           dangerouslySetInnerHTML={{ __html: htmlContent }}\n// // // //           style={{ width: \"100%\", height: \"100%\" }}\n// // // //         ></div>\n// // // //       </div>\n// // // //     </section>\n// // // //   );\n// // // // };\n\n// // // // export default AthleteSection;\n\n// // // // // import React, { useState, useEffect } from \"react\";\n\n// // // // // const AthleteSection = () => {\n// // // // //   const [htmlContent, setHtmlContent] = useState(\"\");\n\n// // // // //   useEffect(() => {\n// // // // //     // Fetch the content of test2.html\n// // // // //     fetch(\"/test2.html\") // Ensure the path is correct and relative to the public folder\n// // // // //       .then((response) => {\n// // // // //         if (!response.ok) {\n// // // // //           throw new Error(`Failed to load HTML file: ${response.statusText}`);\n// // // // //         }\n// // // // //         return response.text();\n// // // // //       })\n// // // // //       .then((data) => {\n// // // // //         // Optional: Parse and sanitize the HTML if needed\n// // // // //         const parser = new DOMParser();\n// // // // //         const doc = parser.parseFromString(data, \"text/html\");\n// // // // //         const sanitizedContent = doc.body.innerHTML; // Get only the body content\n// // // // //         setHtmlContent(sanitizedContent); // Set sanitized content\n// // // // //       })\n// // // // //       .catch((error) => console.error(\"Error fetching HTML file:\", error));\n// // // // //   }, []);\n\n// // // // //   return (\n// // // // //     <section className=\"athlete-section\" style={{ background: \"#f4f4f9\" }}>\n// // // // //       <h3 style={{ textAlign: \"center\", color: \"#4CAF50\" }}>Athlete Highlights</h3>\n// // // // //       <div\n// // // // //         style={{\n// // // // //           position: \"relative\",\n// // // // //           maxWidth: \"1200px\",\n// // // // //           margin: \"auto\",\n// // // // //           overflow: \"hidden\",\n// // // // //           padding: \"20px\",\n// // // // //           borderRadius: \"8px\",\n// // // // //           boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\n// // // // //           backgroundColor: \"#ffffff\",\n// // // // //         }}\n// // // // //       >\n// // // // //         {/* Render the sanitized HTML content */}\n// // // // //         <div\n// // // // //           dangerouslySetInnerHTML={{ __html: htmlContent }}\n// // // // //           style={{ width: \"100%\", height: \"100%\" }}\n// // // // //         ></div>\n// // // // //       </div>\n// // // // //     </section>\n// // // // //   );\n// // // // // };\n\n// // // // // export default AthleteSection;\n\n// // // import React, { useState } from \"react\";\n\n// // // const AthleteSection = () => {\n// // //     const [currentSlide, setCurrentSlide] = useState(0); // State for tracking the current slide\n// // //     const totalSlides = 3; // Total number of slides (adjust as necessary)\n\n// // //     const nextSlide = () => {\n// // //         setCurrentSlide((currentSlide + 1) % totalSlides); // Move to the next slide\n// // //     };\n\n// // //     const prevSlide = () => {\n// // //         setCurrentSlide((currentSlide - 1 + totalSlides) % totalSlides); // Move to the previous slide\n// // //     };\n\n// // //     return (\n// // //         <section className=\"athlete-section\" style={{ background: \"#f4f4f9\", padding: \"20px 0\" }}>\n// // //             <h3 style={{ textAlign: \"center\", color: \"#4CAF50\" }}>Athlete Highlights</h3>\n// // //             <div className=\"carousel-container\">\n// // //                 <div\n// // //                     className=\"carousel\"\n// // //                     style={{ transform: `translateX(-${currentSlide * 100}%)` }}\n// // //                 >\n// // //                     {/* Slide 1 */}\n// // //                     <div className=\"carousel-item\">\n// // //                         <iframe\n// // //                             src=\"medal.html\"\n// // //                             title=\"Medal Tracking Visualization\"\n// // //                             sandbox=\"allow-same-origin allow-forms allow-scripts allow-downloads allow-popups allow-popups-to-escape-sandbox allow-top-navigation-by-user-activation\"\n// // //                         ></iframe>\n// // //                     </div>\n// // //                     {/* Slide 2 */}\n// // //                     <div className=\"carousel-item\">\n// // //                         <iframe\n// // //                             src=\"country.html\"\n// // //                             title=\"Country Tracking Visualization\"\n// // //                             sandbox=\"allow-same-origin allow-forms allow-scripts allow-downloads allow-popups allow-popups-to-escape-sandbox allow-top-navigation-by-user-activation\"\n// // //                         ></iframe>\n// // //                     </div>\n// // //                     {/* Slide 3 */}\n// // //                     <div className=\"carousel-item\">\n// // //                         <iframe\n// // //                             src=\"gender.html\"\n// // //                             title=\"Gender Tracking Visualization\"\n// // //                             sandbox=\"allow-same-origin allow-forms allow-scripts allow-downloads allow-popups allow-popups-to-escape-sandbox allow-top-navigation-by-user-activation\"\n// // //                         ></iframe>\n// // //                     </div>\n// // //                 </div>\n// // //                 {/* Carousel Controls */}\n// // //                 <div className=\"carousel-controls\">\n// // //                     <button onClick={prevSlide} aria-label=\"Previous Slide\">&lt;</button>\n// // //                     <button onClick={nextSlide} aria-label=\"Next Slide\">&gt;</button>\n// // //                 </div>\n// // //             </div>\n// // //         </section>\n// // //     );\n// // // };\n\n// // // export default AthleteSection;\n// // import React, { useState, useEffect } from \"react\";\n\n// // const AthleteSection = () => {\n// //   const [htmlContent, setHtmlContent] = useState(null);\n\n// //   useEffect(() => {\n// //     let isMounted = true; // Prevent unnecessary state updates after unmounting\n\n// //     // Fetch the HTML content only once\n// //     fetch(\"/test2.html\") // Ensure the path is correct and matches your directory structure\n// //       .then((response) => {\n// //         if (!response.ok) {\n// //           throw new Error(`Failed to fetch HTML: ${response.statusText}`);\n// //         }\n// //         return response.text();\n// //       })\n// //       .then((data) => {\n// //         if (isMounted) {\n// //           setHtmlContent(data); // Store the HTML content in state\n// //         }\n// //       })\n// //       .catch((error) => console.error(\"Error fetching HTML:\", error));\n\n// //     return () => {\n// //       isMounted = false; // Clean up to avoid memory leaks\n// //     };\n// //   }, []); // Empty dependency array ensures this only runs once\n\n// //   return (\n// //     <section\n// //       className=\"athlete-section\"\n// //       style={{\n// //         background: \"#f4f4f9\",\n// //         padding: \"20px\",\n// //         textAlign: \"center\",\n// //       }}\n// //     >\n// //       <h3 style={{ color: \"#4CAF50\" }}>Athlete Highlights</h3>\n// //       <div\n// //         style={{\n// //           position: \"relative\",\n// //           maxWidth: \"1200px\",\n// //           margin: \"auto\",\n// //           overflow: \"hidden\",\n// //           borderRadius: \"8px\",\n// //           boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\n// //           backgroundColor: \"#ffffff\",\n// //         }}\n// //       >\n// //         {htmlContent ? (\n// //           <div\n// //             dangerouslySetInnerHTML={{ __html: htmlContent }}\n// //             style={{\n// //               width: \"100%\",\n// //               height: \"100%\",\n// //             }}\n// //           />\n// //         ) : (\n// //           <p>Loading...</p> // Optional: Add a loading indicator\n// //         )}\n// //       </div>\n// //     </section>\n// //   );\n// // };\n\n// // export default AthleteSection;\n\n// import React, { useState, useEffect, useRef } from \"react\";\n\n// const AthleteSection = () => {\n//   const [carouselContent, setCarouselContent] = useState(\"\");\n//   const carouselRef = useRef(null); // Reference to the carousel container\n//   const [currentSlide, setCurrentSlide] = useState(0);\n//   const totalSlidesRef = useRef(0);\n\n//   // Fetch and set carousel content\n//   useEffect(() => {\n//     fetch(\"/test2.html\")\n//       .then((response) => {\n//         if (!response.ok) {\n//           throw new Error(`Failed to load HTML file: ${response.statusText}`);\n//         }\n//         return response.text();\n//       })\n//       .then((htmlString) => {\n//         const parser = new DOMParser();\n//         const doc = parser.parseFromString(htmlString, \"text/html\");\n//         const carousel = doc.querySelector(\"#carousel-container\");\n//         if (carousel) {\n//           setCarouselContent(carousel.outerHTML);\n//           totalSlidesRef.current = carousel.querySelectorAll(\".carousel-item\").length;\n//         } else {\n//           console.error(\"Carousel container not found in the loaded HTML\");\n//         }\n//       })\n//       .catch((error) => console.error(\"Error fetching HTML file:\", error));\n//   }, []);\n\n//   // Handle iframe loading visibility\n//   useEffect(() => {\n//     if (carouselContent) {\n//       document.querySelectorAll(\"iframe\").forEach((iframe) => {\n//         iframe.onload = () => {\n//           iframe.style.visibility = \"visible\";\n//         };\n//         iframe.style.visibility = \"hidden\"; // Initially hidden\n//       });\n//     }\n//   }, [carouselContent]);\n\n//   useEffect(() => {\n//     if (carouselRef.current) {\n//       const carousel = carouselRef.current.querySelector(\".carousel\");\n//       if (carousel) {\n//         carousel.style.transform = `translateX(-${currentSlide * 100}%)`;\n//       }\n//     }\n//   }, [currentSlide]);\n\n//   useEffect(() => {\n//     if (carouselRef.current && carouselContent) {\n//       const totalSlides = carouselRef.current.querySelectorAll(\".carousel-item\").length;\n//       totalSlidesRef.current = totalSlides;\n//     }\n//   }, [carouselContent]);\n\n//   const goToPrevSlide = () => {\n//     setCurrentSlide((prev) =>\n//       prev === 0 ? totalSlidesRef.current - 1 : prev - 1\n//     );\n//   };\n\n//   const goToNextSlide = () => {\n//     setCurrentSlide((prev) =>\n//       prev === totalSlidesRef.current - 1 ? 0 : prev + 1\n//     );\n//   };\n\n//   return (\n//     <section className=\"athlete-section\" style={{ background: \"#f4f4f9\" }}>\n//       <h3 style={{ textAlign: \"center\", color: \"#4CAF50\" }}>Athlete Highlights</h3>\n//       <div\n//         ref={carouselRef}\n//         style={{\n//           position: \"relative\",\n//           maxWidth: \"1200px\",\n//           margin: \"auto\",\n//           overflow: \"hidden\",\n//           padding: \"20px\",\n//           borderRadius: \"8px\",\n//           boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\n//           backgroundColor: \"#ffffff\",\n//         }}\n//       >\n//         <div\n//           dangerouslySetInnerHTML={{ __html: carouselContent }}\n//           style={{ width: \"100%\", height: \"100%\" }}\n//         ></div>\n//         <div\n//           className=\"carousel-controls\"\n//           style={{\n//             position: \"absolute\",\n//             top: \"50%\",\n//             width: \"100%\",\n//             display: \"flex\",\n//             justifyContent: \"space-between\",\n//             transform: \"translateY(-50%)\",\n//           }}\n//         >\n//           <button\n//             onClick={goToPrevSlide}\n//             style={{\n//               backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n//               color: \"#fff\",\n//               border: \"none\",\n//               padding: \"10px 20px\",\n//               cursor: \"pointer\",\n//               borderRadius: \"50%\",\n//             }}\n//           >\n//             &lt;\n//           </button>\n//           <button\n//             onClick={goToNextSlide}\n//             style={{\n//               backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n//               color: \"#fff\",\n//               border: \"none\",\n//               padding: \"10px 20px\",\n//               cursor: \"pointer\",\n//               borderRadius: \"50%\",\n//             }}\n//           >\n//             &gt;\n//           </button>\n//         </div>\n//       </div>\n//     </section>\n//   );\n// };\n\n// export default AthleteSection;\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AthleteSection = () => {\n  _s();\n  const [carouselContent, setCarouselContent] = useState(\"\");\n  const carouselRef = useRef(null);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const totalSlidesRef = useRef(0);\n\n  // Load carousel content\n  useEffect(() => {\n    fetch(\"/test2.html\").then(response => {\n      if (!response.ok) {\n        throw new Error(`Failed to load HTML file: ${response.statusText}`);\n      }\n      return response.text();\n    }).then(htmlString => {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(htmlString, \"text/html\");\n      const carousel = doc.querySelector(\"#carousel-container\");\n      if (carousel) {\n        setCarouselContent(carousel.outerHTML);\n        totalSlidesRef.current = carousel.querySelectorAll(\".carousel-item\").length;\n      } else {\n        console.error(\"Carousel container not found in the loaded HTML\");\n      }\n    }).catch(error => console.error(\"Error fetching HTML file:\", error));\n  }, []);\n\n  // Reload iframe content on navigation\n  useEffect(() => {\n    if (carouselRef.current) {\n      const iframes = carouselRef.current.querySelectorAll(\"iframe\");\n      iframes.forEach((iframe, index) => {\n        iframe.style.visibility = index === currentSlide ? \"visible\" : \"hidden\";\n        if (index === currentSlide) iframe.src = iframe.src; // Force reload\n      });\n    }\n  }, [currentSlide]);\n\n  // Navigation controls\n  const goToPrevSlide = () => {\n    setCurrentSlide(prev => prev === 0 ? totalSlidesRef.current - 1 : prev - 1);\n  };\n  const goToNextSlide = () => {\n    setCurrentSlide(prev => prev === totalSlidesRef.current - 1 ? 0 : prev + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"athlete-section\",\n    style: {\n      background: \"#f4f4f9\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        textAlign: \"center\",\n        color: \"#4CAF50\"\n      },\n      children: \"Athlete Highlights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: carouselRef,\n      style: {\n        position: \"relative\",\n        maxWidth: \"1200px\",\n        margin: \"auto\",\n        overflow: \"hidden\",\n        padding: \"20px\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\n        backgroundColor: \"#ffffff\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: carouselContent\n        },\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carousel-controls\",\n        style: {\n          position: \"absolute\",\n          top: \"50%\",\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          transform: \"translateY(-50%)\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToPrevSlide,\n          style: {\n            backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n            color: \"#fff\",\n            border: \"none\",\n            padding: \"10px 20px\",\n            cursor: \"pointer\",\n            borderRadius: \"50%\"\n          },\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToNextSlide,\n          style: {\n            backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n            color: \"#fff\",\n            border: \"none\",\n            padding: \"10px 20px\",\n            cursor: \"pointer\",\n            borderRadius: \"50%\"\n          },\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 418,\n    columnNumber: 5\n  }, this);\n};\n_s(AthleteSection, \"Cn7/zrmpMKV4iT4m6LGSmvnXuC8=\");\n_c = AthleteSection;\nexport default AthleteSection;\nvar _c;\n$RefreshReg$(_c, \"AthleteSection\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","AthleteSection","_s","carouselContent","setCarouselContent","carouselRef","currentSlide","setCurrentSlide","totalSlidesRef","fetch","then","response","ok","Error","statusText","text","htmlString","parser","DOMParser","doc","parseFromString","carousel","querySelector","outerHTML","current","querySelectorAll","length","console","error","catch","iframes","forEach","iframe","index","style","visibility","src","goToPrevSlide","prev","goToNextSlide","className","background","children","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","ref","position","maxWidth","margin","overflow","padding","borderRadius","boxShadow","backgroundColor","dangerouslySetInnerHTML","__html","width","height","top","display","justifyContent","transform","onClick","border","cursor","_c","$RefreshReg$"],"sources":["/workspaces/dsci554-hw/project-datavizolympians/src/components/2.js"],"sourcesContent":["// // // // import React, { useState, useEffect } from \"react\";\r\n\r\n// // // // const AthleteSection = () => {\r\n// // // //   const [htmlContent, setHtmlContent] = useState(\"\");\r\n\r\n// // // //   useEffect(() => {\r\n// // // //     // Fetch the content of test2.html\r\n// // // //     fetch(\"/test2.html\")\r\n// // // //       .then((response) => {\r\n// // // //         if (!response.ok) {\r\n// // // //           throw new Error(`Failed to load HTML file: ${response.statusText}`);\r\n// // // //         }\r\n// // // //         return response.text();\r\n// // // //       })\r\n// // // //       .then((data) => {\r\n// // // //         setHtmlContent(data); // Set the fetched HTML content\r\n// // // //       })\r\n// // // //       .catch((error) => console.error(\"Error fetching HTML file:\", error));\r\n// // // //   }, []);\r\n\r\n// // // //   return (\r\n// // // //     <section className=\"athlete-section\" style={{ background: \"#f4f4f9\" }}>\r\n// // // //       <h3 style={{ textAlign: \"center\", color: \"#4CAF50\" }}>Athlete Highlights</h3>\r\n// // // //       <div\r\n// // // //         style={{\r\n// // // //           position: \"relative\",\r\n// // // //           maxWidth: \"1200px\",\r\n// // // //           margin: \"auto\",\r\n// // // //           overflow: \"hidden\",\r\n// // // //           padding: \"20px\",\r\n// // // //           borderRadius: \"8px\",\r\n// // // //           boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\r\n// // // //           backgroundColor: \"#ffffff\",\r\n// // // //         }}\r\n// // // //       >\r\n// // // //         {/* Render the HTML content */}\r\n// // // //         <div\r\n// // // //           dangerouslySetInnerHTML={{ __html: htmlContent }}\r\n// // // //           style={{ width: \"100%\", height: \"100%\" }}\r\n// // // //         ></div>\r\n// // // //       </div>\r\n// // // //     </section>\r\n// // // //   );\r\n// // // // };\r\n\r\n// // // // export default AthleteSection;\r\n\r\n\r\n// // // // // import React, { useState, useEffect } from \"react\";\r\n\r\n// // // // // const AthleteSection = () => {\r\n// // // // //   const [htmlContent, setHtmlContent] = useState(\"\");\r\n\r\n// // // // //   useEffect(() => {\r\n// // // // //     // Fetch the content of test2.html\r\n// // // // //     fetch(\"/test2.html\") // Ensure the path is correct and relative to the public folder\r\n// // // // //       .then((response) => {\r\n// // // // //         if (!response.ok) {\r\n// // // // //           throw new Error(`Failed to load HTML file: ${response.statusText}`);\r\n// // // // //         }\r\n// // // // //         return response.text();\r\n// // // // //       })\r\n// // // // //       .then((data) => {\r\n// // // // //         // Optional: Parse and sanitize the HTML if needed\r\n// // // // //         const parser = new DOMParser();\r\n// // // // //         const doc = parser.parseFromString(data, \"text/html\");\r\n// // // // //         const sanitizedContent = doc.body.innerHTML; // Get only the body content\r\n// // // // //         setHtmlContent(sanitizedContent); // Set sanitized content\r\n// // // // //       })\r\n// // // // //       .catch((error) => console.error(\"Error fetching HTML file:\", error));\r\n// // // // //   }, []);\r\n\r\n// // // // //   return (\r\n// // // // //     <section className=\"athlete-section\" style={{ background: \"#f4f4f9\" }}>\r\n// // // // //       <h3 style={{ textAlign: \"center\", color: \"#4CAF50\" }}>Athlete Highlights</h3>\r\n// // // // //       <div\r\n// // // // //         style={{\r\n// // // // //           position: \"relative\",\r\n// // // // //           maxWidth: \"1200px\",\r\n// // // // //           margin: \"auto\",\r\n// // // // //           overflow: \"hidden\",\r\n// // // // //           padding: \"20px\",\r\n// // // // //           borderRadius: \"8px\",\r\n// // // // //           boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\r\n// // // // //           backgroundColor: \"#ffffff\",\r\n// // // // //         }}\r\n// // // // //       >\r\n// // // // //         {/* Render the sanitized HTML content */}\r\n// // // // //         <div\r\n// // // // //           dangerouslySetInnerHTML={{ __html: htmlContent }}\r\n// // // // //           style={{ width: \"100%\", height: \"100%\" }}\r\n// // // // //         ></div>\r\n// // // // //       </div>\r\n// // // // //     </section>\r\n// // // // //   );\r\n// // // // // };\r\n\r\n// // // // // export default AthleteSection;\r\n\r\n\r\n// // // import React, { useState } from \"react\";\r\n\r\n// // // const AthleteSection = () => {\r\n// // //     const [currentSlide, setCurrentSlide] = useState(0); // State for tracking the current slide\r\n// // //     const totalSlides = 3; // Total number of slides (adjust as necessary)\r\n\r\n// // //     const nextSlide = () => {\r\n// // //         setCurrentSlide((currentSlide + 1) % totalSlides); // Move to the next slide\r\n// // //     };\r\n\r\n// // //     const prevSlide = () => {\r\n// // //         setCurrentSlide((currentSlide - 1 + totalSlides) % totalSlides); // Move to the previous slide\r\n// // //     };\r\n\r\n// // //     return (\r\n// // //         <section className=\"athlete-section\" style={{ background: \"#f4f4f9\", padding: \"20px 0\" }}>\r\n// // //             <h3 style={{ textAlign: \"center\", color: \"#4CAF50\" }}>Athlete Highlights</h3>\r\n// // //             <div className=\"carousel-container\">\r\n// // //                 <div\r\n// // //                     className=\"carousel\"\r\n// // //                     style={{ transform: `translateX(-${currentSlide * 100}%)` }}\r\n// // //                 >\r\n// // //                     {/* Slide 1 */}\r\n// // //                     <div className=\"carousel-item\">\r\n// // //                         <iframe\r\n// // //                             src=\"medal.html\"\r\n// // //                             title=\"Medal Tracking Visualization\"\r\n// // //                             sandbox=\"allow-same-origin allow-forms allow-scripts allow-downloads allow-popups allow-popups-to-escape-sandbox allow-top-navigation-by-user-activation\"\r\n// // //                         ></iframe>\r\n// // //                     </div>\r\n// // //                     {/* Slide 2 */}\r\n// // //                     <div className=\"carousel-item\">\r\n// // //                         <iframe\r\n// // //                             src=\"country.html\"\r\n// // //                             title=\"Country Tracking Visualization\"\r\n// // //                             sandbox=\"allow-same-origin allow-forms allow-scripts allow-downloads allow-popups allow-popups-to-escape-sandbox allow-top-navigation-by-user-activation\"\r\n// // //                         ></iframe>\r\n// // //                     </div>\r\n// // //                     {/* Slide 3 */}\r\n// // //                     <div className=\"carousel-item\">\r\n// // //                         <iframe\r\n// // //                             src=\"gender.html\"\r\n// // //                             title=\"Gender Tracking Visualization\"\r\n// // //                             sandbox=\"allow-same-origin allow-forms allow-scripts allow-downloads allow-popups allow-popups-to-escape-sandbox allow-top-navigation-by-user-activation\"\r\n// // //                         ></iframe>\r\n// // //                     </div>\r\n// // //                 </div>\r\n// // //                 {/* Carousel Controls */}\r\n// // //                 <div className=\"carousel-controls\">\r\n// // //                     <button onClick={prevSlide} aria-label=\"Previous Slide\">&lt;</button>\r\n// // //                     <button onClick={nextSlide} aria-label=\"Next Slide\">&gt;</button>\r\n// // //                 </div>\r\n// // //             </div>\r\n// // //         </section>\r\n// // //     );\r\n// // // };\r\n\r\n// // // export default AthleteSection;\r\n// // import React, { useState, useEffect } from \"react\";\r\n\r\n// // const AthleteSection = () => {\r\n// //   const [htmlContent, setHtmlContent] = useState(null);\r\n\r\n// //   useEffect(() => {\r\n// //     let isMounted = true; // Prevent unnecessary state updates after unmounting\r\n\r\n// //     // Fetch the HTML content only once\r\n// //     fetch(\"/test2.html\") // Ensure the path is correct and matches your directory structure\r\n// //       .then((response) => {\r\n// //         if (!response.ok) {\r\n// //           throw new Error(`Failed to fetch HTML: ${response.statusText}`);\r\n// //         }\r\n// //         return response.text();\r\n// //       })\r\n// //       .then((data) => {\r\n// //         if (isMounted) {\r\n// //           setHtmlContent(data); // Store the HTML content in state\r\n// //         }\r\n// //       })\r\n// //       .catch((error) => console.error(\"Error fetching HTML:\", error));\r\n\r\n// //     return () => {\r\n// //       isMounted = false; // Clean up to avoid memory leaks\r\n// //     };\r\n// //   }, []); // Empty dependency array ensures this only runs once\r\n\r\n// //   return (\r\n// //     <section\r\n// //       className=\"athlete-section\"\r\n// //       style={{\r\n// //         background: \"#f4f4f9\",\r\n// //         padding: \"20px\",\r\n// //         textAlign: \"center\",\r\n// //       }}\r\n// //     >\r\n// //       <h3 style={{ color: \"#4CAF50\" }}>Athlete Highlights</h3>\r\n// //       <div\r\n// //         style={{\r\n// //           position: \"relative\",\r\n// //           maxWidth: \"1200px\",\r\n// //           margin: \"auto\",\r\n// //           overflow: \"hidden\",\r\n// //           borderRadius: \"8px\",\r\n// //           boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\r\n// //           backgroundColor: \"#ffffff\",\r\n// //         }}\r\n// //       >\r\n// //         {htmlContent ? (\r\n// //           <div\r\n// //             dangerouslySetInnerHTML={{ __html: htmlContent }}\r\n// //             style={{\r\n// //               width: \"100%\",\r\n// //               height: \"100%\",\r\n// //             }}\r\n// //           />\r\n// //         ) : (\r\n// //           <p>Loading...</p> // Optional: Add a loading indicator\r\n// //         )}\r\n// //       </div>\r\n// //     </section>\r\n// //   );\r\n// // };\r\n\r\n// // export default AthleteSection;\r\n\r\n// import React, { useState, useEffect, useRef } from \"react\";\r\n\r\n// const AthleteSection = () => {\r\n//   const [carouselContent, setCarouselContent] = useState(\"\");\r\n//   const carouselRef = useRef(null); // Reference to the carousel container\r\n//   const [currentSlide, setCurrentSlide] = useState(0);\r\n//   const totalSlidesRef = useRef(0);\r\n\r\n//   // Fetch and set carousel content\r\n//   useEffect(() => {\r\n//     fetch(\"/test2.html\")\r\n//       .then((response) => {\r\n//         if (!response.ok) {\r\n//           throw new Error(`Failed to load HTML file: ${response.statusText}`);\r\n//         }\r\n//         return response.text();\r\n//       })\r\n//       .then((htmlString) => {\r\n//         const parser = new DOMParser();\r\n//         const doc = parser.parseFromString(htmlString, \"text/html\");\r\n//         const carousel = doc.querySelector(\"#carousel-container\");\r\n//         if (carousel) {\r\n//           setCarouselContent(carousel.outerHTML);\r\n//           totalSlidesRef.current = carousel.querySelectorAll(\".carousel-item\").length;\r\n//         } else {\r\n//           console.error(\"Carousel container not found in the loaded HTML\");\r\n//         }\r\n//       })\r\n//       .catch((error) => console.error(\"Error fetching HTML file:\", error));\r\n//   }, []);\r\n\r\n//   // Handle iframe loading visibility\r\n//   useEffect(() => {\r\n//     if (carouselContent) {\r\n//       document.querySelectorAll(\"iframe\").forEach((iframe) => {\r\n//         iframe.onload = () => {\r\n//           iframe.style.visibility = \"visible\";\r\n//         };\r\n//         iframe.style.visibility = \"hidden\"; // Initially hidden\r\n//       });\r\n//     }\r\n//   }, [carouselContent]);\r\n\r\n//   useEffect(() => {\r\n//     if (carouselRef.current) {\r\n//       const carousel = carouselRef.current.querySelector(\".carousel\");\r\n//       if (carousel) {\r\n//         carousel.style.transform = `translateX(-${currentSlide * 100}%)`;\r\n//       }\r\n//     }\r\n//   }, [currentSlide]);\r\n\r\n//   useEffect(() => {\r\n//     if (carouselRef.current && carouselContent) {\r\n//       const totalSlides = carouselRef.current.querySelectorAll(\".carousel-item\").length;\r\n//       totalSlidesRef.current = totalSlides;\r\n//     }\r\n//   }, [carouselContent]);\r\n\r\n//   const goToPrevSlide = () => {\r\n//     setCurrentSlide((prev) =>\r\n//       prev === 0 ? totalSlidesRef.current - 1 : prev - 1\r\n//     );\r\n//   };\r\n\r\n//   const goToNextSlide = () => {\r\n//     setCurrentSlide((prev) =>\r\n//       prev === totalSlidesRef.current - 1 ? 0 : prev + 1\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <section className=\"athlete-section\" style={{ background: \"#f4f4f9\" }}>\r\n//       <h3 style={{ textAlign: \"center\", color: \"#4CAF50\" }}>Athlete Highlights</h3>\r\n//       <div\r\n//         ref={carouselRef}\r\n//         style={{\r\n//           position: \"relative\",\r\n//           maxWidth: \"1200px\",\r\n//           margin: \"auto\",\r\n//           overflow: \"hidden\",\r\n//           padding: \"20px\",\r\n//           borderRadius: \"8px\",\r\n//           boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\r\n//           backgroundColor: \"#ffffff\",\r\n//         }}\r\n//       >\r\n//         <div\r\n//           dangerouslySetInnerHTML={{ __html: carouselContent }}\r\n//           style={{ width: \"100%\", height: \"100%\" }}\r\n//         ></div>\r\n//         <div\r\n//           className=\"carousel-controls\"\r\n//           style={{\r\n//             position: \"absolute\",\r\n//             top: \"50%\",\r\n//             width: \"100%\",\r\n//             display: \"flex\",\r\n//             justifyContent: \"space-between\",\r\n//             transform: \"translateY(-50%)\",\r\n//           }}\r\n//         >\r\n//           <button\r\n//             onClick={goToPrevSlide}\r\n//             style={{\r\n//               backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n//               color: \"#fff\",\r\n//               border: \"none\",\r\n//               padding: \"10px 20px\",\r\n//               cursor: \"pointer\",\r\n//               borderRadius: \"50%\",\r\n//             }}\r\n//           >\r\n//             &lt;\r\n//           </button>\r\n//           <button\r\n//             onClick={goToNextSlide}\r\n//             style={{\r\n//               backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n//               color: \"#fff\",\r\n//               border: \"none\",\r\n//               padding: \"10px 20px\",\r\n//               cursor: \"pointer\",\r\n//               borderRadius: \"50%\",\r\n//             }}\r\n//           >\r\n//             &gt;\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     </section>\r\n//   );\r\n// };\r\n\r\n// export default AthleteSection;\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst AthleteSection = () => {\r\n  const [carouselContent, setCarouselContent] = useState(\"\");\r\n  const carouselRef = useRef(null);\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  const totalSlidesRef = useRef(0);\r\n\r\n  // Load carousel content\r\n  useEffect(() => {\r\n    fetch(\"/test2.html\")\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to load HTML file: ${response.statusText}`);\r\n        }\r\n        return response.text();\r\n      })\r\n      .then((htmlString) => {\r\n        const parser = new DOMParser();\r\n        const doc = parser.parseFromString(htmlString, \"text/html\");\r\n        const carousel = doc.querySelector(\"#carousel-container\");\r\n        if (carousel) {\r\n          setCarouselContent(carousel.outerHTML);\r\n          totalSlidesRef.current = carousel.querySelectorAll(\".carousel-item\").length;\r\n        } else {\r\n          console.error(\"Carousel container not found in the loaded HTML\");\r\n        }\r\n      })\r\n      .catch((error) => console.error(\"Error fetching HTML file:\", error));\r\n  }, []);\r\n\r\n  // Reload iframe content on navigation\r\n  useEffect(() => {\r\n    if (carouselRef.current) {\r\n      const iframes = carouselRef.current.querySelectorAll(\"iframe\");\r\n      iframes.forEach((iframe, index) => {\r\n        iframe.style.visibility = index === currentSlide ? \"visible\" : \"hidden\";\r\n        if (index === currentSlide) iframe.src = iframe.src; // Force reload\r\n      });\r\n    }\r\n  }, [currentSlide]);\r\n\r\n  // Navigation controls\r\n  const goToPrevSlide = () => {\r\n    setCurrentSlide((prev) =>\r\n      prev === 0 ? totalSlidesRef.current - 1 : prev - 1\r\n    );\r\n  };\r\n\r\n  const goToNextSlide = () => {\r\n    setCurrentSlide((prev) =>\r\n      prev === totalSlidesRef.current - 1 ? 0 : prev + 1\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"athlete-section\" style={{ background: \"#f4f4f9\" }}>\r\n      <h3 style={{ textAlign: \"center\", color: \"#4CAF50\" }}>Athlete Highlights</h3>\r\n      <div\r\n        ref={carouselRef}\r\n        style={{\r\n          position: \"relative\",\r\n          maxWidth: \"1200px\",\r\n          margin: \"auto\",\r\n          overflow: \"hidden\",\r\n          padding: \"20px\",\r\n          borderRadius: \"8px\",\r\n          boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\r\n          backgroundColor: \"#ffffff\",\r\n        }}\r\n      >\r\n        <div\r\n          dangerouslySetInnerHTML={{ __html: carouselContent }}\r\n          style={{ width: \"100%\", height: \"100%\" }}\r\n        ></div>\r\n\r\n        {/* Carousel Controls */}\r\n        <div\r\n          className=\"carousel-controls\"\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            transform: \"translateY(-50%)\",\r\n          }}\r\n        >\r\n          <button\r\n            onClick={goToPrevSlide}\r\n            style={{\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              color: \"#fff\",\r\n              border: \"none\",\r\n              padding: \"10px 20px\",\r\n              cursor: \"pointer\",\r\n              borderRadius: \"50%\",\r\n            }}\r\n          >\r\n            &lt;\r\n          </button>\r\n          <button\r\n            onClick={goToNextSlide}\r\n            style={{\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              color: \"#fff\",\r\n              border: \"none\",\r\n              padding: \"10px 20px\",\r\n              cursor: \"pointer\",\r\n              borderRadius: \"50%\",\r\n            }}\r\n          >\r\n            &gt;\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AthleteSection;\r\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMS,WAAW,GAAGP,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAMY,cAAc,GAAGV,MAAM,CAAC,CAAC,CAAC;;EAEhC;EACAD,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,aAAa,CAAC,CACjBC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6BF,QAAQ,CAACG,UAAU,EAAE,CAAC;MACrE;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDL,IAAI,CAAEM,UAAU,IAAK;MACpB,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;MAC9B,MAAMC,GAAG,GAAGF,MAAM,CAACG,eAAe,CAACJ,UAAU,EAAE,WAAW,CAAC;MAC3D,MAAMK,QAAQ,GAAGF,GAAG,CAACG,aAAa,CAAC,qBAAqB,CAAC;MACzD,IAAID,QAAQ,EAAE;QACZjB,kBAAkB,CAACiB,QAAQ,CAACE,SAAS,CAAC;QACtCf,cAAc,CAACgB,OAAO,GAAGH,QAAQ,CAACI,gBAAgB,CAAC,gBAAgB,CAAC,CAACC,MAAM;MAC7E,CAAC,MAAM;QACLC,OAAO,CAACC,KAAK,CAAC,iDAAiD,CAAC;MAClE;IACF,CAAC,CAAC,CACDC,KAAK,CAAED,KAAK,IAAKD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC;EACxE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA/B,SAAS,CAAC,MAAM;IACd,IAAIQ,WAAW,CAACmB,OAAO,EAAE;MACvB,MAAMM,OAAO,GAAGzB,WAAW,CAACmB,OAAO,CAACC,gBAAgB,CAAC,QAAQ,CAAC;MAC9DK,OAAO,CAACC,OAAO,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;QACjCD,MAAM,CAACE,KAAK,CAACC,UAAU,GAAGF,KAAK,KAAK3B,YAAY,GAAG,SAAS,GAAG,QAAQ;QACvE,IAAI2B,KAAK,KAAK3B,YAAY,EAAE0B,MAAM,CAACI,GAAG,GAAGJ,MAAM,CAACI,GAAG,CAAC,CAAC;MACvD,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAAC9B,YAAY,CAAC,CAAC;;EAElB;EACA,MAAM+B,aAAa,GAAGA,CAAA,KAAM;IAC1B9B,eAAe,CAAE+B,IAAI,IACnBA,IAAI,KAAK,CAAC,GAAG9B,cAAc,CAACgB,OAAO,GAAG,CAAC,GAAGc,IAAI,GAAG,CACnD,CAAC;EACH,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BhC,eAAe,CAAE+B,IAAI,IACnBA,IAAI,KAAK9B,cAAc,CAACgB,OAAO,GAAG,CAAC,GAAG,CAAC,GAAGc,IAAI,GAAG,CACnD,CAAC;EACH,CAAC;EAED,oBACEtC,OAAA;IAASwC,SAAS,EAAC,iBAAiB;IAACN,KAAK,EAAE;MAAEO,UAAU,EAAE;IAAU,CAAE;IAAAC,QAAA,gBACpE1C,OAAA;MAAIkC,KAAK,EAAE;QAAES,SAAS,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAU,CAAE;MAAAF,QAAA,EAAC;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7EhD,OAAA;MACEiD,GAAG,EAAE5C,WAAY;MACjB6B,KAAK,EAAE;QACLgB,QAAQ,EAAE,UAAU;QACpBC,QAAQ,EAAE,QAAQ;QAClBC,MAAM,EAAE,MAAM;QACdC,QAAQ,EAAE,QAAQ;QAClBC,OAAO,EAAE,MAAM;QACfC,YAAY,EAAE,KAAK;QACnBC,SAAS,EAAE,8BAA8B;QACzCC,eAAe,EAAE;MACnB,CAAE;MAAAf,QAAA,gBAEF1C,OAAA;QACE0D,uBAAuB,EAAE;UAAEC,MAAM,EAAExD;QAAgB,CAAE;QACrD+B,KAAK,EAAE;UAAE0B,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAO;MAAE;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eAGPhD,OAAA;QACEwC,SAAS,EAAC,mBAAmB;QAC7BN,KAAK,EAAE;UACLgB,QAAQ,EAAE,UAAU;UACpBY,GAAG,EAAE,KAAK;UACVF,KAAK,EAAE,MAAM;UACbG,OAAO,EAAE,MAAM;UACfC,cAAc,EAAE,eAAe;UAC/BC,SAAS,EAAE;QACb,CAAE;QAAAvB,QAAA,gBAEF1C,OAAA;UACEkE,OAAO,EAAE7B,aAAc;UACvBH,KAAK,EAAE;YACLuB,eAAe,EAAE,oBAAoB;YACrCb,KAAK,EAAE,MAAM;YACbuB,MAAM,EAAE,MAAM;YACdb,OAAO,EAAE,WAAW;YACpBc,MAAM,EAAE,SAAS;YACjBb,YAAY,EAAE;UAChB,CAAE;UAAAb,QAAA,EACH;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACThD,OAAA;UACEkE,OAAO,EAAE3B,aAAc;UACvBL,KAAK,EAAE;YACLuB,eAAe,EAAE,oBAAoB;YACrCb,KAAK,EAAE,MAAM;YACbuB,MAAM,EAAE,MAAM;YACdb,OAAO,EAAE,WAAW;YACpBc,MAAM,EAAE,SAAS;YACjBb,YAAY,EAAE;UAChB,CAAE;UAAAb,QAAA,EACH;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAAC9C,EAAA,CApHID,cAAc;AAAAoE,EAAA,GAAdpE,cAAc;AAsHpB,eAAeA,cAAc;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}