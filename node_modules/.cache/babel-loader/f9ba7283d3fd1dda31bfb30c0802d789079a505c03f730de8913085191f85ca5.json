{"ast":null,"code":"var _jsxFileName = \"/workspaces/dsci554-hw/project-datavizolympians/src/components/Map.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// src/Map.js\nimport React, { useEffect, useState, useRef, useMemo } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport \"leaflet-routing-machine\";\nimport locations from \"./locations\";\nimport axios from \"axios\";\nimport * as turf from '@turf/turf';\n\n// Import sport icons\nimport athleticsIcon from \"/components/freebie-olympic-sports-icons/SVG/athletics.svg\";\nimport artisticGymnasticsIcon from \"/components/freebie-olympic-sports-icons/SVG/artistic_gymnastics.svg\";\nimport beachVolleyballIcon from \"/components/freebie-olympic-sports-icons/SVG/beach_volleyball.svg\";\nimport swimmingIcon from \"/components/freebie-olympic-sports-icons/SVG/swimming.svg\";\nimport boxingIcon from \"/components/freebie-olympic-sports-icons/SVG/boxing.svg\";\nimport wrestlingIcon from \"/components/freebie-olympic-sports-icons/SVG/wrestling.svg\";\nimport tennisIcon from \"/components/freebie-olympic-sports-icons/SVG/tennis.svg\";\nimport volleyballIcon from \"../freebie-olympic-sports-icons/SVG/volleyball.svg\";\nimport rugbyIcon from \"../freebie-olympic-sports-icons/SVG/rugby_sevens.svg\";\nimport weightliftingIcon from \"../freebie-olympic-sports-icons/SVG/weightlifting.svg\";\n\n// Function to create an icon with dynamic size\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst createIcon = (iconUrl, zoom) => {\n  const size = Math.max(32, zoom * 4);\n  return new L.Icon({\n    iconUrl,\n    iconSize: [size, size],\n    iconAnchor: [size / 2, size],\n    popupAnchor: [0, -size]\n  });\n};\n\n// Component to handle zoom changes\nfunction ZoomHandler({\n  setZoom\n}) {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    map.on(\"zoomend\", () => {\n      setZoom(map.getZoom());\n    });\n  }, [map, setZoom]);\n  return null;\n}\n_s(ZoomHandler, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = ZoomHandler;\nfunction RoutingMachine({\n  start,\n  end\n}) {\n  _s2();\n  const map = useMap();\n  const routingControlRef = useRef(null);\n  useEffect(() => {\n    if (!start || !end) return;\n\n    // Clean up existing routing control\n    if (routingControlRef.current) {\n      try {\n        routingControlRef.current.getPlan().setWaypoints([]);\n        map.removeControl(routingControlRef.current);\n      } catch (e) {\n        // Handle potential cleanup errors silently\n      }\n    }\n\n    // Create new routing control\n    try {\n      routingControlRef.current = L.Routing.control({\n        waypoints: [L.latLng(start), L.latLng(end)],\n        routeWhileDragging: false,\n        lineOptions: {\n          styles: [{\n            color: \"#FF5733\",\n            weight: 6\n          }]\n        },\n        createMarker: () => null,\n        // Prevent markers on waypoints\n        addWaypoints: false,\n        fitSelectedRoutes: false,\n        showAlternatives: false\n      }).addTo(map);\n\n      // After the route is created, fetch points of interest\n      routingControlRef.current.on('routesfound', async function (e) {\n        const routes = e.routes;\n        const routeGeoJSON = routes[0].coordinates; // Get the route coordinates\n\n        // Create a LineString from the route\n        const line = turf.lineString(routeGeoJSON.map(coord => [coord.lng, coord.lat]));\n\n        // Define the distance in meters (5 miles)\n        const distanceInMiles = 5;\n        const distanceInMeters = distanceInMiles * 1609.34; // Convert miles to meters\n\n        // Fetch points of interest from Google Places API\n        const placesApiKey = 'YOUR_GOOGLE_PLACES_API_KEY'; // Replace with your API key\n        const placesUrl = `https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${start.lat},${start.lng}&radius=${distanceInMeters}&type=restaurant&key=${placesApiKey}`;\n        console.log('Fetching places from:', placesUrl); // Debugging log\n\n        try {\n          const response = await axios.get(placesUrl);\n          console.log('Response:', response.data); // Debugging log\n          const places = response.data.results;\n\n          // Add points of interest within 5 miles of the route\n          places.forEach(poi => {\n            const point = turf.point([poi.geometry.location.lng, poi.geometry.location.lat]); // [lng, lat]\n            if (turf.distance(line, point, {\n              units: 'meters'\n            }) <= distanceInMeters) {\n              L.marker([poi.geometry.location.lat, poi.geometry.location.lng]).addTo(map).bindPopup(poi.name); // Add a popup with the name of the POI\n            }\n          });\n        } catch (error) {\n          console.error('Error fetching places:', error);\n        }\n      });\n    } catch (e) {\n      console.error('Error creating route:', e);\n    }\n\n    // Cleanup function\n    return () => {\n      if (routingControlRef.current && map) {\n        try {\n          routingControlRef.current.getPlan().setWaypoints([]);\n          map.removeControl(routingControlRef.current);\n        } catch (e) {\n          // Handle cleanup errors silently\n        }\n      }\n    };\n  }, [start, end, map]);\n}\n_s2(RoutingMachine, \"6JzDAggtQ4Wk6OozRhYG+mU/G1E=\", false, function () {\n  return [useMap];\n});\n_c2 = RoutingMachine;\nfunction Map() {\n  _s3();\n  const center = [34.0522, -118.2437];\n  const [currentZoom, setCurrentZoom] = useState(10);\n  const [selectedLocations, setSelectedLocations] = useState([]);\n\n  // Define Southern California bounds\n  const southWest = L.latLng(33.4, -119.2); // San Clemente Island area\n  const northEast = L.latLng(34.8, -117.0); // San Bernardino area\n  const bounds = L.latLngBounds(southWest, northEast);\n\n  // Dynamic icons object that updates with zoom\n  const dynamicIcons = useMemo(() => ({\n    athletics: createIcon(athleticsIcon, currentZoom),\n    artistic_gymnastics: createIcon(artisticGymnasticsIcon, currentZoom),\n    beach_volleyball: createIcon(beachVolleyballIcon, currentZoom),\n    swimming: createIcon(swimmingIcon, currentZoom),\n    boxing: createIcon(boxingIcon, currentZoom),\n    wrestling: createIcon(wrestlingIcon, currentZoom),\n    tennis: createIcon(tennisIcon, currentZoom),\n    volleyball: createIcon(volleyballIcon, currentZoom),\n    rugby_sevens: createIcon(rugbyIcon, currentZoom),\n    weightlifting: createIcon(weightliftingIcon, currentZoom)\n  }), [currentZoom]);\n  const handleMarkerClick = position => {\n    setSelectedLocations(prev => {\n      if (prev.length === 2) return [position]; // Reset if already 2 locations selected\n      return [...prev, position];\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: center,\n    zoom: 10,\n    style: {\n      height: \"100vh\",\n      width: \"100%\"\n    },\n    zoomAnimation: true,\n    minZoom: 9 // Restrict minimum zoom level\n    ,\n    maxZoom: 18 // Restrict maximum zoom level\n    ,\n    maxBounds: bounds // Restrict panning to SoCal\n    ,\n    maxBoundsViscosity: 1.0 // Make bounds \"sticky\"\n    ,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors \\xA9 <a href=\\\"https://carto.com/attributions\\\">CARTO</a>\",\n      bounds: bounds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ZoomHandler, {\n      setZoom: setCurrentZoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), locations.map((location, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: location.position,\n      icon: dynamicIcons[location.type] || dynamicIcons.athletics,\n      eventHandlers: {\n        click: () => handleMarkerClick(location.position)\n      },\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: location.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), location.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this)), selectedLocations.length === 2 && /*#__PURE__*/_jsxDEV(RoutingMachine, {\n      start: selectedLocations[0],\n      end: selectedLocations[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n_s3(Map, \"/H5T8WdrDCZWnff56eb4x2fXu1Q=\");\n_c3 = Map;\nexport default Map;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ZoomHandler\");\n$RefreshReg$(_c2, \"RoutingMachine\");\n$RefreshReg$(_c3, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useMemo","MapContainer","TileLayer","Marker","Popup","useMap","L","locations","axios","turf","athleticsIcon","artisticGymnasticsIcon","beachVolleyballIcon","swimmingIcon","boxingIcon","wrestlingIcon","tennisIcon","volleyballIcon","rugbyIcon","weightliftingIcon","jsxDEV","_jsxDEV","createIcon","iconUrl","zoom","size","Math","max","Icon","iconSize","iconAnchor","popupAnchor","ZoomHandler","setZoom","_s","map","on","getZoom","_c","RoutingMachine","start","end","_s2","routingControlRef","current","getPlan","setWaypoints","removeControl","e","Routing","control","waypoints","latLng","routeWhileDragging","lineOptions","styles","color","weight","createMarker","addWaypoints","fitSelectedRoutes","showAlternatives","addTo","routes","routeGeoJSON","coordinates","line","lineString","coord","lng","lat","distanceInMiles","distanceInMeters","placesApiKey","placesUrl","console","log","response","get","data","places","results","forEach","poi","point","geometry","location","distance","units","marker","bindPopup","name","error","_c2","Map","_s3","center","currentZoom","setCurrentZoom","selectedLocations","setSelectedLocations","southWest","northEast","bounds","latLngBounds","dynamicIcons","athletics","artistic_gymnastics","beach_volleyball","swimming","boxing","wrestling","tennis","volleyball","rugby_sevens","weightlifting","handleMarkerClick","position","prev","length","style","height","width","zoomAnimation","minZoom","maxZoom","maxBounds","maxBoundsViscosity","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","idx","icon","type","eventHandlers","click","description","_c3","$RefreshReg$"],"sources":["/workspaces/dsci554-hw/project-datavizolympians/src/components/Map.js"],"sourcesContent":["// src/Map.js\nimport React, { useEffect, useState, useRef, useMemo } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport \"leaflet-routing-machine\";\nimport locations from \"./locations\";\nimport axios from \"axios\";\nimport * as turf from '@turf/turf';\n\n// Import sport icons\nimport athleticsIcon from \"/components/freebie-olympic-sports-icons/SVG/athletics.svg\";\nimport artisticGymnasticsIcon from \"/components/freebie-olympic-sports-icons/SVG/artistic_gymnastics.svg\";\nimport beachVolleyballIcon from \"/components/freebie-olympic-sports-icons/SVG/beach_volleyball.svg\";\nimport swimmingIcon from \"/components/freebie-olympic-sports-icons/SVG/swimming.svg\";\nimport boxingIcon from \"/components/freebie-olympic-sports-icons/SVG/boxing.svg\";\nimport wrestlingIcon from \"/components/freebie-olympic-sports-icons/SVG/wrestling.svg\";\nimport tennisIcon from \"/components/freebie-olympic-sports-icons/SVG/tennis.svg\";\nimport volleyballIcon from \"../freebie-olympic-sports-icons/SVG/volleyball.svg\";\nimport rugbyIcon from \"../freebie-olympic-sports-icons/SVG/rugby_sevens.svg\";\nimport weightliftingIcon from \"../freebie-olympic-sports-icons/SVG/weightlifting.svg\";\n\n// Function to create an icon with dynamic size\nconst createIcon = (iconUrl, zoom) => {\n  const size = Math.max(32, zoom * 4);\n  return new L.Icon({\n    iconUrl,\n    iconSize: [size, size],\n    iconAnchor: [size / 2, size],\n    popupAnchor: [0, -size],\n  });\n};\n\n// Component to handle zoom changes\nfunction ZoomHandler({ setZoom }) {\n  const map = useMap();\n\n  useEffect(() => {\n    map.on(\"zoomend\", () => {\n      setZoom(map.getZoom());\n    });\n  }, [map, setZoom]);\n\n  return null;\n}\nfunction RoutingMachine({ start, end }) {\n  const map = useMap();\n  const routingControlRef = useRef(null);\n\n  useEffect(() => {\n    if (!start || !end) return;\n\n    // Clean up existing routing control\n    if (routingControlRef.current) {\n      try {\n        routingControlRef.current.getPlan().setWaypoints([]);\n        map.removeControl(routingControlRef.current);\n      } catch (e) {\n        // Handle potential cleanup errors silently\n      }\n    }\n\n    // Create new routing control\n    try {\n      routingControlRef.current = L.Routing.control({\n        waypoints: [L.latLng(start), L.latLng(end)],\n        routeWhileDragging: false,\n        lineOptions: {\n          styles: [{ color: \"#FF5733\", weight: 6 }],\n        },\n        createMarker: () => null, // Prevent markers on waypoints\n        addWaypoints: false,\n        fitSelectedRoutes: false,\n        showAlternatives: false,\n      }).addTo(map);\n\n      // After the route is created, fetch points of interest\n      routingControlRef.current.on('routesfound', async function(e) {\n        const routes = e.routes;\n        const routeGeoJSON = routes[0].coordinates; // Get the route coordinates\n\n        // Create a LineString from the route\n        const line = turf.lineString(routeGeoJSON.map(coord => [coord.lng, coord.lat]));\n\n        // Define the distance in meters (5 miles)\n        const distanceInMiles = 5;\n        const distanceInMeters = distanceInMiles * 1609.34; // Convert miles to meters\n\n        // Fetch points of interest from Google Places API\n        const placesApiKey = 'YOUR_GOOGLE_PLACES_API_KEY'; // Replace with your API key\n        const placesUrl = `https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${start.lat},${start.lng}&radius=${distanceInMeters}&type=restaurant&key=${placesApiKey}`;\n\n        console.log('Fetching places from:', placesUrl); // Debugging log\n\n        try {\n          const response = await axios.get(placesUrl);\n          console.log('Response:', response.data); // Debugging log\n          const places = response.data.results;\n\n          // Add points of interest within 5 miles of the route\n          places.forEach(poi => {\n            const point = turf.point([poi.geometry.location.lng, poi.geometry.location.lat]); // [lng, lat]\n            if (turf.distance(line, point, { units: 'meters' }) <= distanceInMeters) {\n              L.marker([poi.geometry.location.lat, poi.geometry.location.lng])\n                .addTo(map)\n                .bindPopup(poi.name); // Add a popup with the name of the POI\n            }\n          });\n        } catch (error) {\n          console.error('Error fetching places:', error);\n        }\n      });\n\n    } catch (e) {\n      console.error('Error creating route:', e);\n    }\n\n    // Cleanup function\n    return () => {\n      if (routingControlRef.current && map) {\n        try {\n          routingControlRef.current.getPlan().setWaypoints([]);\n          map.removeControl(routingControlRef.current);\n        } catch (e) {\n          // Handle cleanup errors silently\n        }\n      }\n    };\n  }, [start, end, map]);\n}\nfunction Map() {\n  const center = [34.0522, -118.2437];\n  const [currentZoom, setCurrentZoom] = useState(10);\n  const [selectedLocations, setSelectedLocations] = useState([]);\n\n  // Define Southern California bounds\n  const southWest = L.latLng(33.4, -119.2); // San Clemente Island area\n  const northEast = L.latLng(34.8, -117.0); // San Bernardino area\n  const bounds = L.latLngBounds(southWest, northEast);\n\n  // Dynamic icons object that updates with zoom\n  const dynamicIcons = useMemo(() => ({\n    athletics: createIcon(athleticsIcon, currentZoom),\n    artistic_gymnastics: createIcon(artisticGymnasticsIcon, currentZoom),\n    beach_volleyball: createIcon(beachVolleyballIcon, currentZoom),\n    swimming: createIcon(swimmingIcon, currentZoom),\n    boxing: createIcon(boxingIcon, currentZoom),\n    wrestling: createIcon(wrestlingIcon, currentZoom),\n    tennis: createIcon(tennisIcon, currentZoom),\n    volleyball: createIcon(volleyballIcon, currentZoom),\n    rugby_sevens: createIcon(rugbyIcon, currentZoom),\n    weightlifting: createIcon(weightliftingIcon, currentZoom),\n  }), [currentZoom]);\n\n  const handleMarkerClick = (position) => {\n    setSelectedLocations((prev) => {\n      if (prev.length === 2) return [position]; // Reset if already 2 locations selected\n      return [...prev, position];\n    });\n  };\n\n  return (\n    <MapContainer\n      center={center}\n      zoom={10}\n      style={{ height: \"100vh\", width: \"100%\" }}\n      zoomAnimation={true}\n      minZoom={9} // Restrict minimum zoom level\n      maxZoom={18} // Restrict maximum zoom level\n      maxBounds={bounds} // Restrict panning to SoCal\n      maxBoundsViscosity={1.0} // Make bounds \"sticky\"\n    >\n      <TileLayer\n        url=\"https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png\"\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>'\n        bounds={bounds}\n      />\n      <ZoomHandler setZoom={setCurrentZoom} />\n      {locations.map((location, idx) => (\n        <Marker\n          key={idx}\n          position={location.position}\n          icon={dynamicIcons[location.type] || dynamicIcons.athletics}\n          eventHandlers={{\n            click: () => handleMarkerClick(location.position),\n          }}\n        >\n          <Popup>\n            <strong>{location.name}</strong>\n            <br />\n            {location.description}\n          </Popup>\n        </Marker>\n      ))}\n      {selectedLocations.length === 2 && (\n        <RoutingMachine\n          start={selectedLocations[0]}\n          end={selectedLocations[1]}\n        />\n      )}\n    </MapContainer>\n  );\n}\n\nexport default Map;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}